import jnetpcap.packet.ICMPPacket;
import jnetpcap.packet.IPPacket;
import java.net.InetAddress;
import java.util.List;
import java.util.Scanner;

public class Traceroute {

  public static void main(String[] args) throws Exception {
    // Pergunta o IP para o usuário
    Scanner scanner = new Scanner(System.in);
    System.out.println("Digite o IP que você deseja rastrear: ");
    String ip = scanner.nextLine();

    // Conecta-se à rede Tor
    List<InetAddress> torNodes = Tor.getNodes();

    // Realiza o traceroute
    for (InetAddress torNode : torNodes) {
      IPPacket ipPacket = new IPPacket();
      ipPacket.setSourceAddress(InetAddress.getLocalHost());
      ipPacket.setDestinationAddress(ip);
      ICMPPacket icmpPacket = new ICMPPacket();
      icmpPacket.setId(1);
      icmpPacket.setSequenceNumber(1);
      icmpPacket.setType(ICMPPacket.TYPE_ECHO_REQUEST);
      icmpPacket.setCode(ICMPPacket.CODE_ECHO);

      // Envia um pacote ICMP para o nó da rede Tor
      ipPacket.setSourceAddress(torNode);
      icmpPacket.setSourceAddress(torNode);
      System.out.println("Enviando pacote ICMP para " + torNode);
      int hops = 1;
      while (true) {
        // Envia o pacote ICMP
        System.out.println("Enviando pacote ICMP para " + torNode + ", salto " + hops);
        icmpPacket.setDestinationAddress(torNode);
        icmpPacket.setSequenceNumber(hops);
        JnetPcap.sendPacket(icmpPacket);

        // Recebe uma resposta
        ICMPPacket response = (ICMPPacket) JnetPcap.getPacket();
        if (response != null) {
          // Imprime a resposta
          System.out.println("Resposta recebida de " + response.getDestinationAddress());
          break;
        }

        hops++;
      }
    }

    // Busca a localização geográfica da rede
    String rede = response.getDestinationAddress().getHostAddress().split(".")[0];
    GeoIP geoIP = new GeoIP();
    double latitude = geoIP.getLatitude(rede);
    double longitude = geoIP.getLongitude(rede);

    // Imprime a localização geográfica
    System.out.println("A localização geográfica da rede é: " + latitude + ", " + longitude);
  }
}
